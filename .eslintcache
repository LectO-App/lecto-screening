[{"C:\\dev\\lecto\\lecto-screening\\src\\index.js":"1","C:\\dev\\lecto\\lecto-screening\\src\\App.js":"2","C:\\dev\\lecto\\lecto-screening\\src\\redux\\store.js":"3","C:\\dev\\lecto\\lecto-screening\\src\\components\\Router.js":"4","C:\\dev\\lecto\\lecto-screening\\src\\redux\\slices\\questions.js":"5","C:\\dev\\lecto\\lecto-screening\\src\\redux\\slices\\user.js":"6","C:\\dev\\lecto\\lecto-screening\\src\\pages\\FinishedTest.js":"7","C:\\dev\\lecto\\lecto-screening\\src\\pages\\Test.js":"8","C:\\dev\\lecto\\lecto-screening\\src\\pages\\Landing.js":"9","C:\\dev\\lecto\\lecto-screening\\src\\pages\\GetStarted.js":"10","C:\\dev\\lecto\\lecto-screening\\src\\pages\\GetStartedForm.js":"11","C:\\dev\\lecto\\lecto-screening\\src\\components\\Header.js":"12","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\CountItems.js":"13","C:\\dev\\lecto\\lecto-screening\\src\\functions\\exercises.js":"14","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\PrevPostNumber.js":"15","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\JoinWithArrows.js":"16","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\SplitSyllables.js":"17","C:\\dev\\lecto\\lecto-screening\\src\\components\\get-started\\PersonForm.js":"18","C:\\dev\\lecto\\lecto-screening\\src\\components\\get-started\\SchoolForm.js":"19","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\MultipleChoice.js":"20","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\SayTheLetters.js":"21","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\GapQuestion.js":"22","C:\\dev\\lecto\\lecto-screening\\src\\functions\\setAnswer.js":"23","C:\\dev\\lecto\\lecto-screening\\src\\components\\ExerciseContainer.js":"24"},{"size":645,"mtime":1609331220303,"results":"25","hashOfConfig":"26"},{"size":260,"mtime":1611168814309,"results":"27","hashOfConfig":"26"},{"size":204,"mtime":1611187021519,"results":"28","hashOfConfig":"26"},{"size":766,"mtime":1609356695925,"results":"29","hashOfConfig":"26"},{"size":1649,"mtime":1611170746866,"results":"30","hashOfConfig":"26"},{"size":312,"mtime":1609420002316,"results":"31","hashOfConfig":"26"},{"size":478,"mtime":1609331220303,"results":"32","hashOfConfig":"26"},{"size":2124,"mtime":1611193001088,"results":"33","hashOfConfig":"26"},{"size":886,"mtime":1609331220304,"results":"34","hashOfConfig":"26"},{"size":1492,"mtime":1609331220303,"results":"35","hashOfConfig":"26"},{"size":999,"mtime":1609331220303,"results":"36","hashOfConfig":"26"},{"size":258,"mtime":1609331220296,"results":"37","hashOfConfig":"26"},{"size":1548,"mtime":1611193644494,"results":"38","hashOfConfig":"26"},{"size":2189,"mtime":1611167487386,"results":"39","hashOfConfig":"26"},{"size":1750,"mtime":1611193968122,"results":"40","hashOfConfig":"26"},{"size":2332,"mtime":1611192156798,"results":"41","hashOfConfig":"26"},{"size":1414,"mtime":1611193125926,"results":"42","hashOfConfig":"26"},{"size":2490,"mtime":1609331220301,"results":"43","hashOfConfig":"26"},{"size":646,"mtime":1609331220301,"results":"44","hashOfConfig":"26"},{"size":910,"mtime":1611193325696,"results":"45","hashOfConfig":"26"},{"size":959,"mtime":1611193891631,"results":"46","hashOfConfig":"26"},{"size":341,"mtime":1611191311489,"results":"47","hashOfConfig":"26"},{"size":685,"mtime":1611191674545,"results":"48","hashOfConfig":"26"},{"size":464,"mtime":1611191166408,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"68mumg",{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\dev\\lecto\\lecto-screening\\src\\index.js",[],["104","105"],"C:\\dev\\lecto\\lecto-screening\\src\\App.js",["106","107"],"import React from 'react';\r\nimport RouterComponent from './components/Router';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<RouterComponent />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\redux\\store.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\Router.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\redux\\slices\\questions.js",["108"],"import { createSlice, nanoid, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n\tquestions: [],\r\n\tanswers: [],\r\n\tstatus: 'idle', // status: 'idle' | 'loading' | 'succeeded' | 'failed',\r\n\terror: null, // error: string | null\r\n\tcurrent: 0,\r\n\tfinished: false,\r\n};\r\n\r\n// AquÃ­ comienzan los Thunks\r\n\r\nexport const loadQuestions = createAsyncThunk('questions/loadQuestions', async () => {\r\n\tconst result = await axios.get('https://run.mocky.io/v3/25ed3f7d-f039-4e56-936e-90364bec2188');\r\n\treturn result;\r\n});\r\n\r\n// Create Async Thunk puede ser usado para hacer get o post a una API.\r\n\r\nconst slice = createSlice({\r\n\tname: 'questions',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetQuestions: (state, action) => {\r\n\t\t\tstate = action.payload;\r\n\t\t},\r\n\t\tnextQuestion: (state, action) => {\r\n\t\t\tif (state.questions.length > state.current) state.current++;\r\n\t\t\telse state.finished = true;\r\n\t\t},\r\n\t\tsetAnswer: (state, action) => {\r\n\t\t\tstate.answers[state.current].answered = true;\r\n\t\t\tstate.answers[state.current].answer = action.payload;\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[loadQuestions.pending]: (state, action) => {\r\n\t\t\tstate.status = 'loading';\r\n\t\t},\r\n\t\t[loadQuestions.fulfilled]: (state, action) => {\r\n\t\t\tstate.status = 'succeeded';\r\n\t\t\tstate.questions = action.payload.data;\r\n\t\t\tstate.answers = Array(action.payload.data.length).fill({ answered: false, answer: {} });\r\n\t\t},\r\n\t\t[loadQuestions.rejected]: (state, action) => {\r\n\t\t\tstate.status = 'failed';\r\n\t\t\tstate.error = action.error.message;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setQuestions, nextQuestion, setAnswer } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\redux\\slices\\user.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\pages\\FinishedTest.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\pages\\Test.js",["109","110","111"],"C:\\dev\\lecto\\lecto-screening\\src\\pages\\Landing.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\pages\\GetStarted.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\pages\\GetStartedForm.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\Header.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\CountItems.js",["112","113","114","115","116"],"C:\\dev\\lecto\\lecto-screening\\src\\functions\\exercises.js",["117","118","119"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\PrevPostNumber.js",["120","121"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\JoinWithArrows.js",["122","123","124","125"],"import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport useSetAnswer from '../../functions/setAnswer';\r\nimport '../../styles/matching.scss';\r\nimport ExerciseContainer from '../ExerciseContainer';\r\n\r\nlet selected = -1,\r\n\tcantCorrectos = 0;\r\n\r\nconst JoinWithArrows = () => {\r\n\tconst exercise = useSelector(state => state.questions.questions[state.questions.current]);\r\n\r\n\t/* // CreaciÃ³n del estado\r\n\t const [imageState, setImageState] = React.useState(() => {\r\n\t\tlet list = [];\r\n\t\texercise.pair.forEach((item, ind) => {\r\n\t\t\titem.forEach(item => {\r\n\t\t\t\tlist.push({\r\n\t\t\t\t\tpair: ind,\r\n\t\t\t\t\turl: item.url,\r\n\t\t\t\t\tselectionState: 'none', // none, wnone, selected, used\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t});\r\n\t\treturn list;\r\n\t}); \r\n\r\n\t// LÃ³gica de la aplicaciÃ³n\r\n\tconst imageClicked = (e, num) => {\r\n\t\tlet modify = [...imageState];\r\n\r\n\t\tif (modify[num].selectionState === 'selected') {\r\n\t\t\tmodify[num].selectionState = 'none';\r\n\t\t\tselected = -1;\r\n\t\t} else if (modify[num].selectionState === 'none' || modify[num].selectionState === 'wnone') {\r\n\t\t\tif (selected !== -1) {\r\n\t\t\t\tif (modify[selected].pair === modify[num].pair) {\r\n\t\t\t\t\tmodify[selected].selectionState = 'used';\r\n\t\t\t\t\tmodify[num].selectionState = 'used';\r\n\t\t\t\t\tcantCorrectos += 2;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmodify[selected].selectionState = 'wnone';\r\n\t\t\t\t\tmodify[num].selectionState = 'wnone';\r\n\t\t\t\t}\r\n\t\t\t\tselected = -1;\r\n\t\t\t} else {\r\n\t\t\t\tmodify[num].selectionState = 'selected';\r\n\t\t\t\tselected = num;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (cantCorrectos === imageState.length) setImageState(modify);\r\n\t};\r\n\r\n\t// Control de animaciones\r\n\tconst onAnimationEnd = (e, ind) => {\r\n\t\tconsole.log(e);\r\n\t\tif (e.animationName === 'wrongAnswer') {\r\n\t\t\tlet modify = [...imageState];\r\n\t\t\tmodify[ind].selectionState = 'none';\r\n\t\t\tsetImageState(modify);\r\n\t\t}\r\n\t}; */\r\n\r\n\treturn (\r\n\t\t<ExerciseContainer classes='join-with-arrows-container'>\r\n\t\t\t<p className='instruction'>{exercise.instructions[0]}</p>\r\n\t\t\t<div className='images'>\r\n\t\t\t\t{/* {imageState.map((item, ind) => (\r\n\t\t\t\t\t<img\r\n\t\t\t\t\t\tsrc={item.url}\r\n\t\t\t\t\t\talt='IlustraciÃ³n LectO Screening'\r\n\t\t\t\t\t\tclassName={'image ' + item.selectionState}\r\n\t\t\t\t\t\tonClick={e => imageClicked(e, ind)}\r\n\t\t\t\t\t\tonAnimationEnd={e => onAnimationEnd(e, ind)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))} */}\r\n\t\t\t</div>\r\n\t\t</ExerciseContainer>\r\n\t);\r\n};\r\n\r\nexport default JoinWithArrows;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\SplitSyllables.js",["126","127","128"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\get-started\\PersonForm.js",["129"],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PersonForm = props => {\r\n\tconst { register, handleSubmit, errors } = useForm();\r\n\r\n\tconst emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\r\n\r\n\tconst history = useHistory();\r\n\tconst handleSubmitForm = () => {\r\n\t\thistory.push('/test');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='inputs' onSubmit={handleSubmit(handleSubmitForm)}>\r\n\t\t\t<div className='input-group'>\r\n\t\t\t\t<label className='label' htmlFor='email'>\r\n\t\t\t\t\tCorreo electrÃ³nico para enviar los resultados\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tref={register({ required: true, pattern: emailRegex })}\r\n\t\t\t\t\tclassName='input'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tid='email'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.email && <span className='error'>Ingrese un correo electrÃ³nico vÃ¡lido</span>}\r\n\t\t\t</div>\r\n\t\t\t<div className='group'>\r\n\t\t\t\t<div className='input-group'>\r\n\t\t\t\t\t<label className='label' htmlFor='name'>\r\n\t\t\t\t\t\tNombre completo del participante\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input ref={register({ required: true })} className='input' name='name' id='name' type='text' />\r\n\r\n\t\t\t\t\t{errors.name && <span className='error'>Ingrese su nombre completo</span>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='input-group tiny'>\r\n\t\t\t\t\t<label className='label' htmlFor='age'>\r\n\t\t\t\t\t\tEdad del participante\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input ref={register({ required: true })} className='input' name='age' id='age' type='number' min='0' />\r\n\t\t\t\t\t{errors.age && <span className='error'>Ingrese una edad</span>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='checkbox'>\r\n\t\t\t\t<input ref={register} type='checkbox' name='personal-check' id='personal-check' className='check' />\r\n\t\t\t\t<label htmlFor='personal-check' className='label'>\r\n\t\t\t\t\tCorroboraciÃ³n en persona\r\n\t\t\t\t</label>\r\n\t\t\t\t<div className='info'>\r\n\t\t\t\t\t<div className='icon'>?</div>\r\n\t\t\t\t\t<div className='tooltip'>Esto es una explicaciÃ³n de la corroboraciÃ³n</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button type='submit' className='button'>\r\n\t\t\t\tContinuar\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default PersonForm;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\components\\get-started\\SchoolForm.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\MultipleChoice.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\SayTheLetters.js",["130"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\GapQuestion.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\functions\\setAnswer.js",["131"],"import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAnswer } from '../redux/slices/questions';\r\n\r\nconst useSetAnswer = answer => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [startTime, setStartTime] = useState(performance.now());\r\n\tconst [endTime, setEndTime] = useState(0);\r\n\r\n\treturn () => {\r\n\t\twindow.addEventListener(\r\n\t\t\t'keydown',\r\n\t\t\tevent => {\r\n\t\t\t\tif (event.key === 'ArrowRight') {\r\n\t\t\t\t\tsetEndTime(performance.now());\r\n\t\t\t\t\tdispatch(setAnswer({ correct: true, time: startTime - endTime, answer }));\r\n\t\t\t\t}\r\n\t\t\t\twindow.removeEventListener('keydown', () => {});\r\n\t\t\t},\r\n\t\t\t{ once: true }\r\n\t\t);\r\n\t};\r\n};\r\n\r\nexport default useSetAnswer;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\components\\ExerciseContainer.js",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":4,"column":10,"nodeType":"138","messageId":"139","endLine":4,"endColumn":21},{"ruleId":"136","severity":1,"message":"140","line":4,"column":23,"nodeType":"138","messageId":"139","endLine":4,"endColumn":34},{"ruleId":"136","severity":1,"message":"141","line":1,"column":23,"nodeType":"138","messageId":"139","endLine":1,"endColumn":29},{"ruleId":"136","severity":1,"message":"142","line":28,"column":8,"nodeType":"138","messageId":"139","endLine":28,"endColumn":15},{"ruleId":"136","severity":1,"message":"143","line":32,"column":8,"nodeType":"138","messageId":"139","endLine":32,"endColumn":16},{"ruleId":"144","severity":1,"message":"145","line":42,"column":5,"nodeType":"146","endLine":42,"endColumn":7,"suggestions":"147"},{"ruleId":"136","severity":1,"message":"148","line":3,"column":10,"nodeType":"138","messageId":"139","endLine":3,"endColumn":16},{"ruleId":"136","severity":1,"message":"149","line":10,"column":8,"nodeType":"138","messageId":"139","endLine":10,"endColumn":15},{"ruleId":"136","severity":1,"message":"150","line":14,"column":20,"nodeType":"138","messageId":"139","endLine":14,"endColumn":32},{"ruleId":"136","severity":1,"message":"151","line":17,"column":19,"nodeType":"138","messageId":"139","endLine":17,"endColumn":30},{"ruleId":"144","severity":1,"message":"152","line":27,"column":5,"nodeType":"146","endLine":27,"endColumn":7,"suggestions":"153"},{"ruleId":"136","severity":1,"message":"154","line":5,"column":8,"nodeType":"138","messageId":"139","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"155","line":7,"column":7,"nodeType":"138","messageId":"139","endLine":7,"endColumn":27},{"ruleId":"136","severity":1,"message":"156","line":41,"column":8,"nodeType":"138","messageId":"139","endLine":41,"endColumn":17},{"ruleId":"136","severity":1,"message":"157","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"158","line":8,"column":9,"nodeType":"138","messageId":"139","endLine":8,"endColumn":16},{"ruleId":"136","severity":1,"message":"159","line":1,"column":17,"nodeType":"138","messageId":"139","endLine":1,"endColumn":25},{"ruleId":"136","severity":1,"message":"160","line":3,"column":8,"nodeType":"138","messageId":"139","endLine":3,"endColumn":20},{"ruleId":"136","severity":1,"message":"161","line":7,"column":5,"nodeType":"138","messageId":"139","endLine":7,"endColumn":13},{"ruleId":"136","severity":1,"message":"162","line":8,"column":2,"nodeType":"138","messageId":"139","endLine":8,"endColumn":15},{"ruleId":"136","severity":1,"message":"163","line":10,"column":8,"nodeType":"138","messageId":"139","endLine":10,"endColumn":17},{"ruleId":"136","severity":1,"message":"164","line":23,"column":9,"nodeType":"138","messageId":"139","endLine":23,"endColumn":24},{"ruleId":"144","severity":1,"message":"165","line":29,"column":5,"nodeType":"146","endLine":29,"endColumn":19,"suggestions":"166"},{"ruleId":"167","severity":1,"message":"168","line":8,"column":21,"nodeType":"169","messageId":"170","endLine":8,"endColumn":449},{"ruleId":"144","severity":1,"message":"171","line":14,"column":5,"nodeType":"146","endLine":14,"endColumn":13,"suggestions":"172"},{"ruleId":"136","severity":1,"message":"150","line":8,"column":20,"nodeType":"138","messageId":"139","endLine":8,"endColumn":32},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'nanoid' is defined but never used.","'history' is assigned a value but never used.","'finished' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["175"],"'motion' is defined but never used.","'current' is assigned a value but never used.","'setStartTime' is assigned a value but never used.","'setSelected' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'endTime', and 'startTime'. Either include them or remove the dependency array.",["176"],"'JSONTest' is defined but never used.","'randomBetweenNumbers' is assigned a value but never used.","'finalTest' is assigned a value but never used.","'useEffect' is defined but never used.","'numbers' is assigned a value but never used.","'useState' is defined but never used.","'useSetAnswer' is defined but never used.","'selected' is assigned a value but never used.","'cantCorrectos' is assigned a value but never used.","'isCorrect' is assigned a value but never used.","'wordWasModified' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'exercise.exercise.word'. Either include it or remove the dependency array.",["177"],"no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","Literal","unexpected","React Hook useEffect has a missing dependency: 'nextAnswer'. Either include it or remove the dependency array.",["178"],"no-global-assign","no-unsafe-negation",{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [dispatch]",{"range":"187","text":"188"},"Update the dependencies array to be: [dispatch, endTime, startTime]",{"range":"189","text":"190"},"Update the dependencies array to be: [exercise.exercise.word, modifiedWord]",{"range":"191","text":"192"},"Update the dependencies array to be: [answer, nextAnswer]",{"range":"193","text":"194"},[1522,1524],"[dispatch]",[932,934],"[dispatch, endTime, startTime]",[955,969],"[exercise.exercise.word, modifiedWord]",[483,491],"[answer, nextAnswer]"]