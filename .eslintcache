[{"C:\\dev\\lecto\\lecto-screening\\src\\index.js":"1","C:\\dev\\lecto\\lecto-screening\\src\\App.js":"2","C:\\dev\\lecto\\lecto-screening\\src\\redux\\store.js":"3","C:\\dev\\lecto\\lecto-screening\\src\\components\\Router.js":"4","C:\\dev\\lecto\\lecto-screening\\src\\redux\\slices\\user.js":"5","C:\\dev\\lecto\\lecto-screening\\src\\redux\\slices\\questions.js":"6","C:\\dev\\lecto\\lecto-screening\\src\\pages\\Landing.js":"7","C:\\dev\\lecto\\lecto-screening\\src\\pages\\GetStarted.js":"8","C:\\dev\\lecto\\lecto-screening\\src\\pages\\FinishedTest.js":"9","C:\\dev\\lecto\\lecto-screening\\src\\pages\\Test.js":"10","C:\\dev\\lecto\\lecto-screening\\src\\pages\\GetStartedForm.js":"11","C:\\dev\\lecto\\lecto-screening\\src\\components\\Header.js":"12","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\SplitSyllables.js":"13","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\CountItems.js":"14","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\JoinWithArrows.js":"15","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\PrevPostNumber.js":"16","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\MultipleChoice.js":"17","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\GapQuestion.js":"18","C:\\dev\\lecto\\lecto-screening\\src\\components\\get-started\\SchoolForm.js":"19","C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\SayTheLetters.js":"20","C:\\dev\\lecto\\lecto-screening\\src\\components\\get-started\\PersonForm.js":"21","C:\\dev\\lecto\\lecto-screening\\src\\components\\ExerciseContainer.js":"22","C:\\dev\\lecto\\lecto-screening\\src\\functions\\setAnswer.js":"23"},{"size":645,"mtime":1609331220303,"results":"24","hashOfConfig":"25"},{"size":260,"mtime":1611168814309,"results":"26","hashOfConfig":"25"},{"size":204,"mtime":1611187021519,"results":"27","hashOfConfig":"25"},{"size":766,"mtime":1609356695925,"results":"28","hashOfConfig":"25"},{"size":312,"mtime":1609420002316,"results":"29","hashOfConfig":"25"},{"size":1649,"mtime":1611170746866,"results":"30","hashOfConfig":"25"},{"size":886,"mtime":1609331220304,"results":"31","hashOfConfig":"25"},{"size":1492,"mtime":1609331220303,"results":"32","hashOfConfig":"25"},{"size":478,"mtime":1609331220303,"results":"33","hashOfConfig":"25"},{"size":2126,"mtime":1611338365919,"results":"34","hashOfConfig":"25"},{"size":999,"mtime":1609331220303,"results":"35","hashOfConfig":"25"},{"size":258,"mtime":1609331220296,"results":"36","hashOfConfig":"25"},{"size":1507,"mtime":1611342521558,"results":"37","hashOfConfig":"25"},{"size":1048,"mtime":1611342483317,"results":"38","hashOfConfig":"25"},{"size":2365,"mtime":1611339149092,"results":"39","hashOfConfig":"25"},{"size":1841,"mtime":1611342514035,"results":"40","hashOfConfig":"25"},{"size":1144,"mtime":1611342509128,"results":"41","hashOfConfig":"25"},{"size":434,"mtime":1611342499642,"results":"42","hashOfConfig":"25"},{"size":646,"mtime":1609331220301,"results":"43","hashOfConfig":"25"},{"size":808,"mtime":1611342303870,"results":"44","hashOfConfig":"25"},{"size":2490,"mtime":1609331220301,"results":"45","hashOfConfig":"25"},{"size":1006,"mtime":1611244623141,"results":"46","hashOfConfig":"25"},{"size":1099,"mtime":1611342230724,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"68mumg",{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\dev\\lecto\\lecto-screening\\src\\index.js",[],["100","101"],"C:\\dev\\lecto\\lecto-screening\\src\\App.js",["102","103"],"import React from 'react';\r\nimport RouterComponent from './components/Router';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<RouterComponent />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\redux\\store.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\Router.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\redux\\slices\\user.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\redux\\slices\\questions.js",["104"],"import { createSlice, nanoid, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n\tquestions: [],\r\n\tanswers: [],\r\n\tstatus: 'idle', // status: 'idle' | 'loading' | 'succeeded' | 'failed',\r\n\terror: null, // error: string | null\r\n\tcurrent: 0,\r\n\tfinished: false,\r\n};\r\n\r\n// AquÃ­ comienzan los Thunks\r\n\r\nexport const loadQuestions = createAsyncThunk('questions/loadQuestions', async () => {\r\n\tconst result = await axios.get('https://run.mocky.io/v3/25ed3f7d-f039-4e56-936e-90364bec2188');\r\n\treturn result;\r\n});\r\n\r\n// Create Async Thunk puede ser usado para hacer get o post a una API.\r\n\r\nconst slice = createSlice({\r\n\tname: 'questions',\r\n\tinitialState,\r\n\treducers: {\r\n\t\tsetQuestions: (state, action) => {\r\n\t\t\tstate = action.payload;\r\n\t\t},\r\n\t\tnextQuestion: (state, action) => {\r\n\t\t\tif (state.questions.length > state.current) state.current++;\r\n\t\t\telse state.finished = true;\r\n\t\t},\r\n\t\tsetAnswer: (state, action) => {\r\n\t\t\tstate.answers[state.current].answered = true;\r\n\t\t\tstate.answers[state.current].answer = action.payload;\r\n\t\t},\r\n\t},\r\n\textraReducers: {\r\n\t\t[loadQuestions.pending]: (state, action) => {\r\n\t\t\tstate.status = 'loading';\r\n\t\t},\r\n\t\t[loadQuestions.fulfilled]: (state, action) => {\r\n\t\t\tstate.status = 'succeeded';\r\n\t\t\tstate.questions = action.payload.data;\r\n\t\t\tstate.answers = Array(action.payload.data.length).fill({ answered: false, answer: {} });\r\n\t\t},\r\n\t\t[loadQuestions.rejected]: (state, action) => {\r\n\t\t\tstate.status = 'failed';\r\n\t\t\tstate.error = action.error.message;\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport const { setQuestions, nextQuestion, setAnswer } = slice.actions;\r\n\r\nexport default slice.reducer;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\pages\\Landing.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\pages\\GetStarted.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\pages\\FinishedTest.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\pages\\Test.js",["105","106","107"],"import React, { useEffect } from 'react';\r\nimport { loadQuestions, nextQuestion } from '../redux/slices/questions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport CountItems from '../components/exercises/CountItems';\r\nimport PrevPostNumber from '../components/exercises/PrevPostNumber';\r\nimport JoinWithArrows from '../components/exercises/JoinWithArrows';\r\nimport SplitSyllables from '../components/exercises/SplitSyllables';\r\nimport MultipleChoice from '../components/exercises/MultipleChoice';\r\nimport SayTheLetters from '../components/exercises/SayTheLetters';\r\nimport GapQuestion from '../components/exercises/GapQuestion';\r\n\r\nconst exercises = {\r\n\tcounting: <CountItems />,\r\n\t'gap-question': <GapQuestion />,\r\n\t'multiple-choice': <MultipleChoice />,\r\n\t'prev-next': <PrevPostNumber />,\r\n\t'letters-question': <SayTheLetters />,\r\n\tmatching: <JoinWithArrows />,\r\n\tsyllables: <SplitSyllables />,\r\n\t'read-alloud': <SayTheLetters />,\r\n};\r\n\r\nconst Test = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tconst questions = useSelector(state => state.questions.questions);\r\n\tconst current = useSelector(state => state.questions.current);\r\n\tconst finished = useSelector(state => state.questions.finished);\r\n\tconst status = useSelector(state => state.questions.status);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(loadQuestions());\r\n\r\n\t\twindow.onbeforeunload = confirmExit;\r\n\t\tfunction confirmExit() {\r\n\t\t\treturn 'show warning';\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className='test-container'>\r\n\t\t\t<>\r\n\t\t\t\t<header className='test-header'>\r\n\t\t\t\t\t<h2 className='title'>{status === 'succeeded' && questions[current].instructions[0]}</h2>\r\n\t\t\t\t</header>\r\n\r\n\t\t\t\t{status === 'succeeded' && exercises[questions[current].type]}\r\n\r\n\t\t\t\t{/*pressed && !currentAnswer.ableToContinue && (\r\n\t\t\t\t\t<p className='warning'>Â¡TenÃ©s que completar el ejercicio para poder continuar!</p>\r\n\t\t\t\t)*/}\r\n\r\n\t\t\t\t<button className='next-button' onClick={() => dispatch(nextQuestion())}>\r\n\t\t\t\t\tÂ¡Siguiente!\r\n\t\t\t\t</button>\r\n\t\t\t</>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Test;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\pages\\GetStartedForm.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\Header.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\SplitSyllables.js",["108","109","110","111"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\CountItems.js",["112"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\JoinWithArrows.js",["113","114","115","116"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\PrevPostNumber.js",["117","118","119"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\MultipleChoice.js",["120"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\GapQuestion.js",["121"],"C:\\dev\\lecto\\lecto-screening\\src\\components\\get-started\\SchoolForm.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\exercises\\SayTheLetters.js",[],"C:\\dev\\lecto\\lecto-screening\\src\\components\\get-started\\PersonForm.js",["122"],"import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PersonForm = props => {\r\n\tconst { register, handleSubmit, errors } = useForm();\r\n\r\n\tconst emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\r\n\r\n\tconst history = useHistory();\r\n\tconst handleSubmitForm = () => {\r\n\t\thistory.push('/test');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className='inputs' onSubmit={handleSubmit(handleSubmitForm)}>\r\n\t\t\t<div className='input-group'>\r\n\t\t\t\t<label className='label' htmlFor='email'>\r\n\t\t\t\t\tCorreo electrÃ³nico para enviar los resultados\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\tref={register({ required: true, pattern: emailRegex })}\r\n\t\t\t\t\tclassName='input'\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\tid='email'\r\n\t\t\t\t\ttype='email'\r\n\t\t\t\t/>\r\n\t\t\t\t{errors.email && <span className='error'>Ingrese un correo electrÃ³nico vÃ¡lido</span>}\r\n\t\t\t</div>\r\n\t\t\t<div className='group'>\r\n\t\t\t\t<div className='input-group'>\r\n\t\t\t\t\t<label className='label' htmlFor='name'>\r\n\t\t\t\t\t\tNombre completo del participante\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input ref={register({ required: true })} className='input' name='name' id='name' type='text' />\r\n\r\n\t\t\t\t\t{errors.name && <span className='error'>Ingrese su nombre completo</span>}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='input-group tiny'>\r\n\t\t\t\t\t<label className='label' htmlFor='age'>\r\n\t\t\t\t\t\tEdad del participante\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input ref={register({ required: true })} className='input' name='age' id='age' type='number' min='0' />\r\n\t\t\t\t\t{errors.age && <span className='error'>Ingrese una edad</span>}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='checkbox'>\r\n\t\t\t\t<input ref={register} type='checkbox' name='personal-check' id='personal-check' className='check' />\r\n\t\t\t\t<label htmlFor='personal-check' className='label'>\r\n\t\t\t\t\tCorroboraciÃ³n en persona\r\n\t\t\t\t</label>\r\n\t\t\t\t<div className='info'>\r\n\t\t\t\t\t<div className='icon'>?</div>\r\n\t\t\t\t\t<div className='tooltip'>Esto es una explicaciÃ³n de la corroboraciÃ³n</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<button type='submit' className='button'>\r\n\t\t\t\tContinuar\r\n\t\t\t</button>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default PersonForm;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\components\\ExerciseContainer.js",["123","124","125"],"import React, { useEffect, useState } from 'react';\r\nimport { motion, useAnimation } from 'framer-motion';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst ExerciseContainer = props => {\r\n\tconst current = useSelector(state => state.questions.current);\r\n\tconst exercises = useSelector(state => state.questions.questions);\r\n\r\n\tconst controls = useAnimation();\r\n\r\n\tconst [changed, setChanged] = useState(true);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst animation = async () => {\r\n\t\t\tsetChanged(false);\r\n\t\t\tawait controls.start({ transform: 'translateX(-100vw)' }, { ease: 'linear' });\r\n\t\t\tawait controls.start({ transform: 'translateX(100vw)' }, { ease: 'linear', duration: 0 });\r\n\t\t\tsetChanged(true);\r\n\t\t\treturn await controls.start({ transform: 'translateX(0vw)' }, { ease: 'linear' });\r\n\t\t};\r\n\t\tanimation();\r\n\t}, [current]);\r\n\r\n\treturn (\r\n\t\t<motion.div className={`test-exercise-container ${props.classes}`} animate={controls}>\r\n\t\t\t{props.children}\r\n\t\t</motion.div>\r\n\t);\r\n};\r\n\r\nexport default ExerciseContainer;\r\n","C:\\dev\\lecto\\lecto-screening\\src\\functions\\setAnswer.js",["126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":21},{"ruleId":"131","severity":1,"message":"135","line":4,"column":23,"nodeType":"133","messageId":"134","endLine":4,"endColumn":34},{"ruleId":"131","severity":1,"message":"136","line":1,"column":23,"nodeType":"133","messageId":"134","endLine":1,"endColumn":29},{"ruleId":"131","severity":1,"message":"137","line":28,"column":8,"nodeType":"133","messageId":"134","endLine":28,"endColumn":15},{"ruleId":"131","severity":1,"message":"138","line":32,"column":8,"nodeType":"133","messageId":"134","endLine":32,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":42,"column":5,"nodeType":"141","endLine":42,"endColumn":7,"suggestions":"142"},{"ruleId":"131","severity":1,"message":"143","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":17},{"ruleId":"131","severity":1,"message":"144","line":13,"column":8,"nodeType":"133","messageId":"134","endLine":13,"endColumn":17},{"ruleId":"131","severity":1,"message":"145","line":26,"column":9,"nodeType":"133","messageId":"134","endLine":26,"endColumn":24},{"ruleId":"139","severity":1,"message":"146","line":32,"column":5,"nodeType":"141","endLine":32,"endColumn":19,"suggestions":"147"},{"ruleId":"131","severity":1,"message":"143","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":17},{"ruleId":"131","severity":1,"message":"148","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"149","line":7,"column":5,"nodeType":"133","messageId":"134","endLine":7,"endColumn":13},{"ruleId":"131","severity":1,"message":"150","line":8,"column":2,"nodeType":"133","messageId":"134","endLine":8,"endColumn":15},{"ruleId":"131","severity":1,"message":"151","line":13,"column":8,"nodeType":"133","messageId":"134","endLine":13,"endColumn":14},{"ruleId":"131","severity":1,"message":"152","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"153","line":9,"column":9,"nodeType":"133","messageId":"134","endLine":9,"endColumn":16},{"ruleId":"131","severity":1,"message":"143","line":11,"column":8,"nodeType":"133","messageId":"134","endLine":11,"endColumn":17},{"ruleId":"131","severity":1,"message":"143","line":12,"column":8,"nodeType":"133","messageId":"134","endLine":12,"endColumn":17},{"ruleId":"131","severity":1,"message":"143","line":6,"column":8,"nodeType":"133","messageId":"134","endLine":6,"endColumn":17},{"ruleId":"154","severity":1,"message":"155","line":8,"column":21,"nodeType":"156","messageId":"157","endLine":8,"endColumn":449},{"ruleId":"131","severity":1,"message":"158","line":7,"column":8,"nodeType":"133","messageId":"134","endLine":7,"endColumn":17},{"ruleId":"131","severity":1,"message":"159","line":11,"column":9,"nodeType":"133","messageId":"134","endLine":11,"endColumn":16},{"ruleId":"139","severity":1,"message":"160","line":22,"column":5,"nodeType":"141","endLine":22,"endColumn":14,"suggestions":"161"},{"ruleId":"139","severity":1,"message":"162","line":28,"column":5,"nodeType":"141","endLine":28,"endColumn":17,"suggestions":"163"},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'nanoid' is defined but never used.","'history' is assigned a value but never used.","'finished' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],"'setAnswer' is assigned a value but never used.","'isCorrect' is assigned a value but never used.","'wordWasModified' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'exercise.exercise.word'. Either include it or remove the dependency array.",["167"],"'useState' is defined but never used.","'selected' is assigned a value but never used.","'cantCorrectos' is assigned a value but never used.","'answer' is assigned a value but never used.","'useEffect' is defined but never used.","'numbers' is assigned a value but never used.","no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","Literal","unexpected","'exercises' is assigned a value but never used.","'changed' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'controls'. Either include it or remove the dependency array.",["168"],"React Hook useEffect has a missing dependency: 'keydownEvent'. Either include it or remove the dependency array.",["169"],"no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [dispatch]",{"range":"178","text":"179"},"Update the dependencies array to be: [exercise.exercise.word, modifiedWord]",{"range":"180","text":"181"},"Update the dependencies array to be: [controls, current]",{"range":"182","text":"183"},"Update the dependencies array to be: [keydownEvent, userAnswer]",{"range":"184","text":"185"},[1522,1524],"[dispatch]",[1048,1062],"[exercise.exercise.word, modifiedWord]",[806,815],"[controls, current]",[935,947],"[keydownEvent, userAnswer]"]