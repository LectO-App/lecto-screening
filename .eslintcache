[{"/Users/Ulises/Code/LectO/lecto-screening/src/index.js":"1","/Users/Ulises/Code/LectO/lecto-screening/src/redux/store.js":"2","/Users/Ulises/Code/LectO/lecto-screening/src/App.js":"3","/Users/Ulises/Code/LectO/lecto-screening/src/redux/slices/user.js":"4","/Users/Ulises/Code/LectO/lecto-screening/src/components/Router.js":"5","/Users/Ulises/Code/LectO/lecto-screening/src/redux/slices/questions.js":"6","/Users/Ulises/Code/LectO/lecto-screening/src/pages/GetStarted.js":"7","/Users/Ulises/Code/LectO/lecto-screening/src/pages/GetStartedForm.js":"8","/Users/Ulises/Code/LectO/lecto-screening/src/pages/FinishedTest.js":"9","/Users/Ulises/Code/LectO/lecto-screening/src/pages/Landing.js":"10","/Users/Ulises/Code/LectO/lecto-screening/src/pages/Test.js":"11","/Users/Ulises/Code/LectO/lecto-screening/src/components/Header.js":"12","/Users/Ulises/Code/LectO/lecto-screening/src/components/get-started/SchoolForm.js":"13","/Users/Ulises/Code/LectO/lecto-screening/src/components/get-started/PersonForm.js":"14","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/PrevPostNumber.js":"15","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/CountItems.js":"16","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/SplitSyllables.js":"17","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/JoinWithArrows.js":"18","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/SayTheLetters.js":"19","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/GapQuestion.js":"20","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/MultipleChoice.js":"21","/Users/Ulises/Code/LectO/lecto-screening/src/components/ExerciseContainer.js":"22","/Users/Ulises/Code/LectO/lecto-screening/src/functions/setAnswer.js":"23"},{"size":624,"mtime":1609293016653,"results":"24","hashOfConfig":"25"},{"size":197,"mtime":1611236681372,"results":"26","hashOfConfig":"25"},{"size":246,"mtime":1611236681359,"results":"27","hashOfConfig":"25"},{"size":298,"mtime":1609363646180,"results":"28","hashOfConfig":"25"},{"size":742,"mtime":1607640776320,"results":"29","hashOfConfig":"25"},{"size":1593,"mtime":1611236681371,"results":"30","hashOfConfig":"25"},{"size":1445,"mtime":1607640776324,"results":"31","hashOfConfig":"25"},{"size":966,"mtime":1607640776324,"results":"32","hashOfConfig":"25"},{"size":461,"mtime":1607640776324,"results":"33","hashOfConfig":"25"},{"size":857,"mtime":1607640776324,"results":"34","hashOfConfig":"25"},{"size":2060,"mtime":1611237678813,"results":"35","hashOfConfig":"25"},{"size":245,"mtime":1607640776320,"results":"36","hashOfConfig":"25"},{"size":619,"mtime":1607640776323,"results":"37","hashOfConfig":"25"},{"size":2426,"mtime":1607640776323,"results":"38","hashOfConfig":"25"},{"size":1691,"mtime":1611236681362,"results":"39","hashOfConfig":"25"},{"size":1721,"mtime":1611241203762,"results":"40","hashOfConfig":"25"},{"size":1369,"mtime":1611236681364,"results":"41","hashOfConfig":"25"},{"size":2249,"mtime":1611236681361,"results":"42","hashOfConfig":"25"},{"size":927,"mtime":1611236681363,"results":"43","hashOfConfig":"25"},{"size":329,"mtime":1611236681361,"results":"44","hashOfConfig":"25"},{"size":878,"mtime":1611236681362,"results":"45","hashOfConfig":"25"},{"size":446,"mtime":1611236681359,"results":"46","hashOfConfig":"25"},{"size":659,"mtime":1611236681369,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"faz00w",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"50"},"/Users/Ulises/Code/LectO/lecto-screening/src/index.js",[],["104","105"],"/Users/Ulises/Code/LectO/lecto-screening/src/redux/store.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/App.js",["106","107"],"import React from 'react';\nimport RouterComponent from './components/Router';\n\nimport { useSelector, useDispatch } from 'react-redux';\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<RouterComponent />\n\t\t</div>\n\t);\n}\n\nexport default App;\n","/Users/Ulises/Code/LectO/lecto-screening/src/redux/slices/user.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/Router.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/redux/slices/questions.js",["108"],"import { createSlice, nanoid, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst initialState = {\n\tquestions: [],\n\tanswers: [],\n\tstatus: 'idle', // status: 'idle' | 'loading' | 'succeeded' | 'failed',\n\terror: null, // error: string | null\n\tcurrent: 0,\n\tfinished: false,\n};\n\n// AquÃ­ comienzan los Thunks\n\nexport const loadQuestions = createAsyncThunk('questions/loadQuestions', async () => {\n\tconst result = await axios.get('https://run.mocky.io/v3/25ed3f7d-f039-4e56-936e-90364bec2188');\n\treturn result;\n});\n\n// Create Async Thunk puede ser usado para hacer get o post a una API.\n\nconst slice = createSlice({\n\tname: 'questions',\n\tinitialState,\n\treducers: {\n\t\tsetQuestions: (state, action) => {\n\t\t\tstate = action.payload;\n\t\t},\n\t\tnextQuestion: (state, action) => {\n\t\t\tif (state.questions.length > state.current) state.current++;\n\t\t\telse state.finished = true;\n\t\t},\n\t\tsetAnswer: (state, action) => {\n\t\t\tstate.answers[state.current].answered = true;\n\t\t\tstate.answers[state.current].answer = action.payload;\n\t\t},\n\t},\n\textraReducers: {\n\t\t[loadQuestions.pending]: (state, action) => {\n\t\t\tstate.status = 'loading';\n\t\t},\n\t\t[loadQuestions.fulfilled]: (state, action) => {\n\t\t\tstate.status = 'succeeded';\n\t\t\tstate.questions = action.payload.data;\n\t\t\tstate.answers = Array(action.payload.data.length).fill({ answered: false, answer: {} });\n\t\t},\n\t\t[loadQuestions.rejected]: (state, action) => {\n\t\t\tstate.status = 'failed';\n\t\t\tstate.error = action.error.message;\n\t\t},\n\t},\n});\n\nexport const { setQuestions, nextQuestion, setAnswer } = slice.actions;\n\nexport default slice.reducer;\n","/Users/Ulises/Code/LectO/lecto-screening/src/pages/GetStarted.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/GetStartedForm.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/FinishedTest.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/Landing.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/Test.js",["109","110","111"],"import React, { useEffect } from 'react';\nimport { loadQuestions, nextQuestion } from '../redux/slices/questions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { useHistory } from 'react-router-dom';\n\nimport CountItems from '../components/exercises/CountItems';\nimport PrevPostNumber from '../components/exercises/PrevPostNumber';\nimport JoinWithArrows from '../components/exercises/JoinWithArrows';\nimport SplitSyllables from '../components/exercises/SplitSyllables';\nimport MultipleChoice from '../components/exercises/MultipleChoice';\nimport SayTheLetters from '../components/exercises/SayTheLetters';\nimport GapQuestion from '../components/exercises/GapQuestion';\n\nconst exercises = {\n\tcounting: <CountItems />,\n\t'gap-question': <GapQuestion />,\n\t'multiple-choice': <MultipleChoice />,\n\t'prev-next': <PrevPostNumber />,\n\t'letters-question': <SayTheLetters />,\n\tmatching: <JoinWithArrows />,\n\tsyllables: <SplitSyllables />,\n\t'read-alloud': <SayTheLetters />,\n};\n\nconst Test = () => {\n\tconst dispatch = useDispatch();\n\tconst history = useHistory();\n\n\tconst questions = useSelector(state => state.questions.questions);\n\tconst current = useSelector(state => state.questions.current);\n\tconst finished = useSelector(state => state.questions.finished);\n\tconst status = useSelector(state => state.questions.status);\n\n\tuseEffect(() => {\n\t\tdispatch(loadQuestions());\n\n\t\twindow.onbeforeunload = confirmExit;\n\t\tfunction confirmExit() {\n\t\t\treturn 'show warning';\n\t\t}\n\t}, []);\n\treturn (\n\t\t<div className='test-container'>\n\t\t\t<>\n\t\t\t\t<header className='test-header'>\n\t\t\t\t\t<h2 className='title'>{status === 'succeeded' && questions[current].instructions[0]}</h2>\n\t\t\t\t</header>\n\n\t\t\t\t{status === 'succeeded' && exercises[questions[current].type]}\n\n\t\t\t\t{/*pressed && !currentAnswer.ableToContinue && (\n\t\t\t\t\t<p className='warning'>Â¡TenÃ©s que completar el ejercicio para poder continuar!</p>\n\t\t\t\t)*/}\n\n\t\t\t\t<button className='next-button' onClick={() => dispatch(nextQuestion())}>\n\t\t\t\t\tÂ¡Siguiente!\n\t\t\t\t</button>\n\t\t\t</>\n\t\t</div>\n\t);\n};\n\nexport default Test;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/Header.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/get-started/SchoolForm.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/get-started/PersonForm.js",["112"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\nconst PersonForm = props => {\n\tconst { register, handleSubmit, errors } = useForm();\n\n\tconst emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\n\tconst history = useHistory();\n\tconst handleSubmitForm = () => {\n\t\thistory.push('/test');\n\t};\n\n\treturn (\n\t\t<form className='inputs' onSubmit={handleSubmit(handleSubmitForm)}>\n\t\t\t<div className='input-group'>\n\t\t\t\t<label className='label' htmlFor='email'>\n\t\t\t\t\tCorreo electrÃ³nico para enviar los resultados\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tref={register({ required: true, pattern: emailRegex })}\n\t\t\t\t\tclassName='input'\n\t\t\t\t\tname='email'\n\t\t\t\t\tid='email'\n\t\t\t\t\ttype='email'\n\t\t\t\t/>\n\t\t\t\t{errors.email && <span className='error'>Ingrese un correo electrÃ³nico vÃ¡lido</span>}\n\t\t\t</div>\n\t\t\t<div className='group'>\n\t\t\t\t<div className='input-group'>\n\t\t\t\t\t<label className='label' htmlFor='name'>\n\t\t\t\t\t\tNombre completo del participante\n\t\t\t\t\t</label>\n\t\t\t\t\t<input ref={register({ required: true })} className='input' name='name' id='name' type='text' />\n\n\t\t\t\t\t{errors.name && <span className='error'>Ingrese su nombre completo</span>}\n\t\t\t\t</div>\n\t\t\t\t<div className='input-group tiny'>\n\t\t\t\t\t<label className='label' htmlFor='age'>\n\t\t\t\t\t\tEdad del participante\n\t\t\t\t\t</label>\n\t\t\t\t\t<input ref={register({ required: true })} className='input' name='age' id='age' type='number' min='0' />\n\t\t\t\t\t{errors.age && <span className='error'>Ingrese una edad</span>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='checkbox'>\n\t\t\t\t<input ref={register} type='checkbox' name='personal-check' id='personal-check' className='check' />\n\t\t\t\t<label htmlFor='personal-check' className='label'>\n\t\t\t\t\tCorroboraciÃ³n en persona\n\t\t\t\t</label>\n\t\t\t\t<div className='info'>\n\t\t\t\t\t<div className='icon'>?</div>\n\t\t\t\t\t<div className='tooltip'>Esto es una explicaciÃ³n de la corroboraciÃ³n</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button type='submit' className='button'>\n\t\t\t\tContinuar\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default PersonForm;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/PrevPostNumber.js",["113","114"],"import React, { useEffect, useState } from 'react';\nimport ExerciseContainer from '../ExerciseContainer';\nimport { useSelector } from 'react-redux';\n\nconst PrevPostNumber = props => {\n\tconst exercise = useSelector(state => state.questions.questions[state.questions.current]);\n\n\tconst [numbers, setNumbers] = useState({ before: null, after: null });\n\n\t/* useEffect(() => {\n\t\tif (numbers.before && numbers.after) {\n\t\t\tconst correctPrevAndPost = { ...exercise };\n\t\t\tdelete correctPrevAndPost.number;\n\t\t\tconst correct = Object.entries(exercise).every(([key, value]) => numbers[key] === value);\n\t\t\tconsole.log({ correct, exercise, numbers });\n\t\t} else {\n\t\t\tconsole.log('nosepuede');\n\t\t}\n\t}, [numbers]); */\n\n\treturn (\n\t\t<ExerciseContainer classes='prev-post-container'>\n\t\t\t<p className='instruction'>{exercise.instructions[0]}</p>\n\t\t\t<div className='numbers'>\n\t\t\t\t<div className='number-input'>\n\t\t\t\t\t<div className='number'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tname='prev'\n\t\t\t\t\t\t\tid='prev'\n\t\t\t\t\t\t\tonChange={e => setNumbers(value => ({ ...value, before: +e.target.value }))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label htmlFor='prev' className='label'>\n\t\t\t\t\t\tAnterior\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div className='number'>{exercise.exercise.number}</div>\n\t\t\t\t<div className='number-input'>\n\t\t\t\t\t<div className='number'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tname='post'\n\t\t\t\t\t\t\tid='post'\n\t\t\t\t\t\t\tonChange={e => setNumbers(value => ({ ...value, after: +e.target.value }))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label htmlFor='post' className='label'>\n\t\t\t\t\t\tPosterior\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</ExerciseContainer>\n\t);\n};\n\nexport default PrevPostNumber;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/CountItems.js",["115","116","117"],"/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/SplitSyllables.js",["118","119","120"],"import React, { useState, useEffect } from 'react';\nimport ExerciseContainer from '../ExerciseContainer';\nimport { useSelector } from 'react-redux';\n\nconst SplitSyllables = props => {\n\tconst exercise = useSelector(state => state.questions.questions[state.questions.current]);\n\n\tconst [modifiedWord, setModifiedWord] = useState(exercise.exercise.word);\n\n\tconst isCorrect = () => {\n\t\tconst userSplitted = modifiedWord.toLowerCase().split('-');\n\n\t\tconst checkArrayEquality = (arr1, arr2) =>\n\t\t\tarr1.length === arr2.length &&\n\t\t\tarr1.every(function (this_i, i) {\n\t\t\t\treturn this_i === arr2[i];\n\t\t\t});\n\n\t\treturn checkArrayEquality(userSplitted, exercise.splitted);\n\t};\n\n\tuseEffect(() => {\n\t\tconst wordWasModified = modifiedWord.toLowerCase() !== exercise.exercise.word.toLowerCase();\n\t\t/* setCurrentAnswer({\n\t\t\tableToContinue: wordWasModified,\n\t\t\tcorrect: isCorrect(),\n\t\t\tanswer: modifiedWord.toLowerCase().split('-'),\n\t\t}); */\n\t}, [modifiedWord]);\n\n\treturn (\n\t\t<ExerciseContainer classes='split-syllables-container'>\n\t\t\t<p className='instruction'>{exercise.instructions[0]}</p>\n\t\t\t<img src={exercise.image} className='image' alt='Imagen' />\n\t\t\t<input\n\t\t\t\tautoComplete='off'\n\t\t\t\tclassName='word-to-split'\n\t\t\t\tvalue={exercise.exercise.word.toUpperCase()}\n\t\t\t\tonChange={e => setModifiedWord(e.target.value)}\n\t\t\t/>\n\t\t</ExerciseContainer>\n\t);\n};\n\nexport default SplitSyllables;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/JoinWithArrows.js",["121","122","123","124"],"import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport useSetAnswer from '../../functions/setAnswer';\nimport '../../styles/matching.scss';\nimport ExerciseContainer from '../ExerciseContainer';\n\nlet selected = -1,\n\tcantCorrectos = 0;\n\nconst JoinWithArrows = () => {\n\tconst exercise = useSelector(state => state.questions.questions[state.questions.current]);\n\n\t/* // CreaciÃ³n del estado\n\t const [imageState, setImageState] = React.useState(() => {\n\t\tlet list = [];\n\t\texercise.pair.forEach((item, ind) => {\n\t\t\titem.forEach(item => {\n\t\t\t\tlist.push({\n\t\t\t\t\tpair: ind,\n\t\t\t\t\turl: item.url,\n\t\t\t\t\tselectionState: 'none', // none, wnone, selected, used\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\treturn list;\n\t}); \n\n\t// LÃ³gica de la aplicaciÃ³n\n\tconst imageClicked = (e, num) => {\n\t\tlet modify = [...imageState];\n\n\t\tif (modify[num].selectionState === 'selected') {\n\t\t\tmodify[num].selectionState = 'none';\n\t\t\tselected = -1;\n\t\t} else if (modify[num].selectionState === 'none' || modify[num].selectionState === 'wnone') {\n\t\t\tif (selected !== -1) {\n\t\t\t\tif (modify[selected].pair === modify[num].pair) {\n\t\t\t\t\tmodify[selected].selectionState = 'used';\n\t\t\t\t\tmodify[num].selectionState = 'used';\n\t\t\t\t\tcantCorrectos += 2;\n\t\t\t\t} else {\n\t\t\t\t\tmodify[selected].selectionState = 'wnone';\n\t\t\t\t\tmodify[num].selectionState = 'wnone';\n\t\t\t\t}\n\t\t\t\tselected = -1;\n\t\t\t} else {\n\t\t\t\tmodify[num].selectionState = 'selected';\n\t\t\t\tselected = num;\n\t\t\t}\n\t\t}\n\n\t\tif (cantCorrectos === imageState.length) setImageState(modify);\n\t};\n\n\t// Control de animaciones\n\tconst onAnimationEnd = (e, ind) => {\n\t\tconsole.log(e);\n\t\tif (e.animationName === 'wrongAnswer') {\n\t\t\tlet modify = [...imageState];\n\t\t\tmodify[ind].selectionState = 'none';\n\t\t\tsetImageState(modify);\n\t\t}\n\t}; */\n\n\treturn (\n\t\t<ExerciseContainer classes='join-with-arrows-container'>\n\t\t\t<p className='instruction'>{exercise.instructions[0]}</p>\n\t\t\t<div className='images'>\n\t\t\t\t{/* {imageState.map((item, ind) => (\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc={item.url}\n\t\t\t\t\t\talt='IlustraciÃ³n LectO Screening'\n\t\t\t\t\t\tclassName={'image ' + item.selectionState}\n\t\t\t\t\t\tonClick={e => imageClicked(e, ind)}\n\t\t\t\t\t\tonAnimationEnd={e => onAnimationEnd(e, ind)}\n\t\t\t\t\t/>\n\t\t\t\t))} */}\n\t\t\t</div>\n\t\t</ExerciseContainer>\n\t);\n};\n\nexport default JoinWithArrows;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/SayTheLetters.js",["125"],"import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport useSetAnswer from '../../functions/setAnswer';\nimport ExerciseContainer from '../ExerciseContainer';\n\nconst SayTheLetters = () => {\n\tconst [answer, setAnswer] = useState('');\n\tconst exercise = useSelector(state => state.questions.questions[state.questions.current]);\n\n\tconst nextAnswer = useSetAnswer(answer);\n\n\tuseEffect(() => {\n\t\tif (answer) nextAnswer(answer);\n\t}, [answer]);\n\n\tconst arrayToShow = exercise.exercise.letters || [exercise.exercise.number];\n\n\treturn (\n\t\t<ExerciseContainer classes='say-the-letters-container'>\n\t\t\t<p className='instruction'>{exercise.instructions[0]}</p>\n\t\t\t<div className='letters'>\n\t\t\t\t{arrayToShow.map(item => (\n\t\t\t\t\t<div className='letter' onClick={() => setAnswer(item)} key={item}>\n\t\t\t\t\t\t{item}\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</ExerciseContainer>\n\t);\n};\n\nexport default SayTheLetters;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/GapQuestion.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/MultipleChoice.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/ExerciseContainer.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/functions/setAnswer.js",["126"],"import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setAnswer } from '../redux/slices/questions';\n\nconst useSetAnswer = answer => {\n\tconst dispatch = useDispatch();\n\n\tconst [startTime, setStartTime] = useState(performance.now());\n\tconst [endTime, setEndTime] = useState(0);\n\n\treturn () => {\n\t\twindow.addEventListener(\n\t\t\t'keydown',\n\t\t\tevent => {\n\t\t\t\tif (event.key === 'ArrowRight') {\n\t\t\t\t\tsetEndTime(performance.now());\n\t\t\t\t\tdispatch(setAnswer({ correct: true, time: startTime - endTime, answer }));\n\t\t\t\t}\n\t\t\t\twindow.removeEventListener('keydown', () => {});\n\t\t\t},\n\t\t\t{ once: true }\n\t\t);\n\t};\n};\n\nexport default useSetAnswer;\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":4,"column":10,"nodeType":"133","messageId":"134","endLine":4,"endColumn":21},{"ruleId":"131","severity":1,"message":"135","line":4,"column":23,"nodeType":"133","messageId":"134","endLine":4,"endColumn":34},{"ruleId":"131","severity":1,"message":"136","line":1,"column":23,"nodeType":"133","messageId":"134","endLine":1,"endColumn":29},{"ruleId":"131","severity":1,"message":"137","line":28,"column":8,"nodeType":"133","messageId":"134","endLine":28,"endColumn":15},{"ruleId":"131","severity":1,"message":"138","line":32,"column":8,"nodeType":"133","messageId":"134","endLine":32,"endColumn":16},{"ruleId":"139","severity":1,"message":"140","line":42,"column":5,"nodeType":"141","endLine":42,"endColumn":7,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":8,"column":21,"nodeType":"145","messageId":"146","endLine":8,"endColumn":449},{"ruleId":"131","severity":1,"message":"147","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":26},{"ruleId":"131","severity":1,"message":"148","line":8,"column":9,"nodeType":"133","messageId":"134","endLine":8,"endColumn":16},{"ruleId":"131","severity":1,"message":"149","line":3,"column":10,"nodeType":"133","messageId":"134","endLine":3,"endColumn":16},{"ruleId":"131","severity":1,"message":"150","line":14,"column":19,"nodeType":"133","messageId":"134","endLine":14,"endColumn":30},{"ruleId":"139","severity":1,"message":"151","line":33,"column":5,"nodeType":"141","endLine":33,"endColumn":7,"suggestions":"152"},{"ruleId":"131","severity":1,"message":"153","line":10,"column":8,"nodeType":"133","messageId":"134","endLine":10,"endColumn":17},{"ruleId":"131","severity":1,"message":"154","line":23,"column":9,"nodeType":"133","messageId":"134","endLine":23,"endColumn":24},{"ruleId":"139","severity":1,"message":"155","line":29,"column":5,"nodeType":"141","endLine":29,"endColumn":19,"suggestions":"156"},{"ruleId":"131","severity":1,"message":"157","line":1,"column":17,"nodeType":"133","messageId":"134","endLine":1,"endColumn":25},{"ruleId":"131","severity":1,"message":"158","line":3,"column":8,"nodeType":"133","messageId":"134","endLine":3,"endColumn":20},{"ruleId":"131","severity":1,"message":"159","line":7,"column":5,"nodeType":"133","messageId":"134","endLine":7,"endColumn":13},{"ruleId":"131","severity":1,"message":"160","line":8,"column":2,"nodeType":"133","messageId":"134","endLine":8,"endColumn":15},{"ruleId":"139","severity":1,"message":"161","line":14,"column":5,"nodeType":"141","endLine":14,"endColumn":13,"suggestions":"162"},{"ruleId":"131","severity":1,"message":"163","line":8,"column":20,"nodeType":"133","messageId":"134","endLine":8,"endColumn":32},"no-native-reassign",["164"],"no-negated-in-lhs",["165"],"no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'nanoid' is defined but never used.","'history' is assigned a value but never used.","'finished' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["166"],"no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","Literal","unexpected","'useEffect' is defined but never used.","'numbers' is assigned a value but never used.","'motion' is defined but never used.","'setSelected' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'keydownEvent'. Either include it or remove the dependency array.",["167"],"'isCorrect' is assigned a value but never used.","'wordWasModified' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'exercise.exercise.word'. Either include it or remove the dependency array.",["168"],"'useState' is defined but never used.","'useSetAnswer' is defined but never used.","'selected' is assigned a value but never used.","'cantCorrectos' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'nextAnswer'. Either include it or remove the dependency array.",["169"],"'setStartTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [dispatch]",{"range":"178","text":"179"},"Update the dependencies array to be: [keydownEvent]",{"range":"180","text":"181"},"Update the dependencies array to be: [exercise.exercise.word, modifiedWord]",{"range":"182","text":"183"},"Update the dependencies array to be: [answer, nextAnswer]",{"range":"184","text":"185"},[1481,1483],"[dispatch]",[1131,1133],"[keydownEvent]",[927,941],"[exercise.exercise.word, modifiedWord]",[470,478],"[answer, nextAnswer]"]