[{"/Users/Ulises/Code/LectO/lecto-screening/src/index.js":"1","/Users/Ulises/Code/LectO/lecto-screening/src/App.js":"2","/Users/Ulises/Code/LectO/lecto-screening/src/components/Router.js":"3","/Users/Ulises/Code/LectO/lecto-screening/src/pages/GetStarted.js":"4","/Users/Ulises/Code/LectO/lecto-screening/src/pages/Landing.js":"5","/Users/Ulises/Code/LectO/lecto-screening/src/pages/GetStartedForm.js":"6","/Users/Ulises/Code/LectO/lecto-screening/src/pages/Test.js":"7","/Users/Ulises/Code/LectO/lecto-screening/src/pages/FinishedTest.js":"8","/Users/Ulises/Code/LectO/lecto-screening/src/components/Header.js":"9","/Users/Ulises/Code/LectO/lecto-screening/src/components/get-started/SchoolForm.js":"10","/Users/Ulises/Code/LectO/lecto-screening/src/components/get-started/PersonForm.js":"11","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/CountItems.js":"12","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/PrevPostNumber.js":"13","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/DrawWord.js":"14","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/SplitSyllables.js":"15","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/JoinWithArrows.js":"16","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/WriteLetter.js":"17","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/NumberOnScreen.js":"18","/Users/Ulises/Code/LectO/lecto-screening/src/functions/exercises.js":"19"},{"size":509,"mtime":1607640776324,"results":"20","hashOfConfig":"21"},{"size":189,"mtime":1607640776315,"results":"22","hashOfConfig":"21"},{"size":742,"mtime":1607640776320,"results":"23","hashOfConfig":"21"},{"size":1445,"mtime":1607640776324,"results":"24","hashOfConfig":"21"},{"size":857,"mtime":1607640776324,"results":"25","hashOfConfig":"21"},{"size":966,"mtime":1607640776324,"results":"26","hashOfConfig":"21"},{"size":4229,"mtime":1607640776325,"results":"27","hashOfConfig":"21"},{"size":461,"mtime":1607640776324,"results":"28","hashOfConfig":"21"},{"size":245,"mtime":1607640776320,"results":"29","hashOfConfig":"21"},{"size":619,"mtime":1607640776323,"results":"30","hashOfConfig":"21"},{"size":2426,"mtime":1607640776323,"results":"31","hashOfConfig":"21"},{"size":1202,"mtime":1607640776321,"results":"32","hashOfConfig":"21"},{"size":1949,"mtime":1607640776322,"results":"33","hashOfConfig":"21"},{"size":2063,"mtime":1607640776321,"results":"34","hashOfConfig":"21"},{"size":1471,"mtime":1607640776322,"results":"35","hashOfConfig":"21"},{"size":2045,"mtime":1607723321749,"results":"36","hashOfConfig":"21"},{"size":1589,"mtime":1607697106136,"results":"37","hashOfConfig":"21"},{"size":1586,"mtime":1607696829905,"results":"38","hashOfConfig":"21"},{"size":7407,"mtime":1607695763823,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"faz00w",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/Ulises/Code/LectO/lecto-screening/src/index.js",[],["84","85"],"/Users/Ulises/Code/LectO/lecto-screening/src/App.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/Router.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/GetStarted.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/Landing.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/GetStartedForm.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/Test.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/pages/FinishedTest.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/Header.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/get-started/SchoolForm.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/get-started/PersonForm.js",["86"],"import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router-dom';\n\nconst PersonForm = props => {\n\tconst { register, handleSubmit, errors } = useForm();\n\n\tconst emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\n\tconst history = useHistory();\n\tconst handleSubmitForm = () => {\n\t\thistory.push('/test');\n\t};\n\n\treturn (\n\t\t<form className='inputs' onSubmit={handleSubmit(handleSubmitForm)}>\n\t\t\t<div className='input-group'>\n\t\t\t\t<label className='label' htmlFor='email'>\n\t\t\t\t\tCorreo electrónico para enviar los resultados\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\tref={register({ required: true, pattern: emailRegex })}\n\t\t\t\t\tclassName='input'\n\t\t\t\t\tname='email'\n\t\t\t\t\tid='email'\n\t\t\t\t\ttype='email'\n\t\t\t\t/>\n\t\t\t\t{errors.email && <span className='error'>Ingrese un correo electrónico válido</span>}\n\t\t\t</div>\n\t\t\t<div className='group'>\n\t\t\t\t<div className='input-group'>\n\t\t\t\t\t<label className='label' htmlFor='name'>\n\t\t\t\t\t\tNombre completo del participante\n\t\t\t\t\t</label>\n\t\t\t\t\t<input ref={register({ required: true })} className='input' name='name' id='name' type='text' />\n\n\t\t\t\t\t{errors.name && <span className='error'>Ingrese su nombre completo</span>}\n\t\t\t\t</div>\n\t\t\t\t<div className='input-group tiny'>\n\t\t\t\t\t<label className='label' htmlFor='age'>\n\t\t\t\t\t\tEdad del participante\n\t\t\t\t\t</label>\n\t\t\t\t\t<input ref={register({ required: true })} className='input' name='age' id='age' type='number' min='0' />\n\t\t\t\t\t{errors.age && <span className='error'>Ingrese una edad</span>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className='checkbox'>\n\t\t\t\t<input ref={register} type='checkbox' name='personal-check' id='personal-check' className='check' />\n\t\t\t\t<label htmlFor='personal-check' className='label'>\n\t\t\t\t\tCorroboración en persona\n\t\t\t\t</label>\n\t\t\t\t<div className='info'>\n\t\t\t\t\t<div className='icon'>?</div>\n\t\t\t\t\t<div className='tooltip'>Esto es una explicación de la corroboración</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<button type='submit' className='button'>\n\t\t\t\tContinuar\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default PersonForm;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/CountItems.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/PrevPostNumber.js",["87"],"import React, { useEffect, useState } from 'react';\nimport { motion } from 'framer-motion';\n\nconst PrevPostNumber = props => {\n\tconst { info, setCurrentAnswer } = props;\n\tconst exercise = props.exercise.exercise;\n\tconsole.log(exercise);\n\n\tconst [numbers, setNumbers] = useState({ before: null, after: null });\n\n\tuseEffect(() => {\n\t\tif (numbers.before && numbers.after) {\n\t\t\tconst correctPrevAndPost = { ...exercise };\n\t\t\tdelete correctPrevAndPost.number;\n\t\t\tconst correct = Object.entries(exercise).every(([key, value]) => numbers[key] === value);\n\t\t\tconsole.log({ correct, exercise, numbers });\n\t\t\tsetCurrentAnswer({ ableToContinue: true, answer: numbers, correct });\n\t\t} else {\n\t\t\tconsole.log('nosepuede');\n\t\t\tsetCurrentAnswer({ ableToContinue: false });\n\t\t}\n\t}, [numbers]);\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName='prev-post-container test-exercise-container'\n\t\t\texit={{ transform: 'translateX(-100vw)' }}\n\t\t\tanimate={{ transform: 'translateX(0vw)' }}\n\t\t\tinitial={{ transform: 'translateX(100vw)' }}\n\t\t\ttransition={{ easing: 'linear' }}\n\t\t>\n\t\t\t<p className='instruction'>{info.instructions[0]}</p>\n\t\t\t<div className='numbers'>\n\t\t\t\t<div className='number-input'>\n\t\t\t\t\t<div className='number'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tname='prev'\n\t\t\t\t\t\t\tid='prev'\n\t\t\t\t\t\t\tonChange={e => setNumbers(value => ({ ...value, before: +e.target.value }))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label htmlFor='prev' className='label'>\n\t\t\t\t\t\tAnterior\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t\t<div className='number'>{exercise.number}</div>\n\t\t\t\t<div className='number-input'>\n\t\t\t\t\t<div className='number'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tautoComplete='off'\n\t\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\t\tname='post'\n\t\t\t\t\t\t\tid='post'\n\t\t\t\t\t\t\tonChange={e => setNumbers(value => ({ ...value, after: +e.target.value }))}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<label htmlFor='post' className='label'>\n\t\t\t\t\t\tPosterior\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</motion.div>\n\t);\n};\n\nexport default PrevPostNumber;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/DrawWord.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/SplitSyllables.js",["88"],"import React, { useState, useEffect } from 'react';\nimport { motion } from 'framer-motion';\n\nconst SplitSyllables = props => {\n\tconst { info, setCurrentAnswer } = props;\n\tconst exercise = props.exercise.exercise;\n\n\tconst [modifiedWord, setModifiedWord] = useState(exercise.word);\n\n\tconst isCorrect = () => {\n\t\tconst userSplitted = modifiedWord.toLowerCase().split('-');\n\n\t\tconst checkArrayEquality = (arr1, arr2) =>\n\t\t\tarr1.length === arr2.length &&\n\t\t\tarr1.every(function (this_i, i) {\n\t\t\t\treturn this_i === arr2[i];\n\t\t\t});\n\n\t\treturn checkArrayEquality(userSplitted, exercise.splitted);\n\t};\n\n\tuseEffect(() => {\n\t\tconst wordWasModified = modifiedWord.toLowerCase() !== exercise.word.toLowerCase();\n\t\tsetCurrentAnswer({\n\t\t\tableToContinue: wordWasModified,\n\t\t\tcorrect: isCorrect(),\n\t\t\tanswer: modifiedWord.toLowerCase().split('-'),\n\t\t});\n\t}, [modifiedWord]);\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName='split-syllables-container test-exercise-container'\n\t\t\texit={{ transform: 'translateX(-100vw)' }}\n\t\t\tanimate={{ transform: 'translateX(0vw)' }}\n\t\t\tinitial={{ transform: 'translateX(100vw)' }}\n\t\t\ttransition={{ easing: 'linear' }}\n\t\t>\n\t\t\t<p className='instruction'>{info.instructions[0]}</p>\n\t\t\t<img src={exercise.image} className='image' alt='Imagen' />\n\t\t\t<input\n\t\t\t\tautoComplete='off'\n\t\t\t\tclassName='word-to-split'\n\t\t\t\tdefaultValue={exercise.word.toUpperCase()}\n\t\t\t\tonChange={e => setModifiedWord(e.target.value)}\n\t\t\t/>\n\t\t</motion.div>\n\t);\n};\n\nexport default SplitSyllables;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/JoinWithArrows.js",[],"/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/WriteLetter.js",["89"],"import React, { useRef, useState } from 'react';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { motion } from 'framer-motion';\n\nimport sound from '../../assets/sound.svg';\n\nconst WriteLetter = props => {\n\tconst { info, setCurrentAnswer } = props;\n\tconst exercise = props.exercise.exercise;\n\tconst audio = useRef();\n\n\tconst [voice, setVoice] = useState();\n\tconst {speak, voices} = useSpeechSynthesis();\n\t\n\tReact.useEffect(() => {\n\t\tsetVoice(voices.filter((e) => {if (e.lang.includes(\"es\")) return true; else return false})[0]);\n\t}, [])\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName='write-letter-container test-exercise-container'\n\t\t\texit={{ transform: 'translateX(-100vw)' }}\n\t\t\tanimate={{ transform: 'translateX(0vw)' }}\n\t\t\tinitial={{ transform: 'translateX(100vw)' }}\n\t\t\ttransition={{ easing: 'linear' }}\n\t\t>\n\t\t\t<p className='instruction'>{info.instructions[0]}</p>\n\t\t\t<div className='icon' onClick={() => speak({text: exercise.letter.toLowerCase(), voice: voice})}>\n\t\t\t\t<img src={sound} alt='Icono Sonido LectO Screening' />\n\t\t\t</div>\n\t\t\t<audio ref={audio} id='audio' src={exercise.audio}></audio>\n\t\t\t<p className='instruction'>{info.instructions[1]}</p>\n\t\t\t<div className='number'>\n\t\t\t\t<input\n\t\t\t\t\tautoComplete='off'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tname='post'\n\t\t\t\t\tid='post'\n\t\t\t\t\tmaxLength='1'\n\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\tsetCurrentAnswer({\n\t\t\t\t\t\t\tableToContinue: e.target.value !== '',\n\t\t\t\t\t\t\tanswer: e.target.value,\n\t\t\t\t\t\t\tcorrect: e.target.value.toLowerCase() === exercise.letter.toLowerCase(),\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</motion.div>\n\t);\n};\n\nexport default WriteLetter;\n","/Users/Ulises/Code/LectO/lecto-screening/src/components/exercises/NumberOnScreen.js",["90"],"import React, { useEffect } from 'react';\nimport { motion } from 'framer-motion';\nimport { useSpeechRecognition } from 'react-speech-kit';\n\nimport microphone from '../../assets/microphone.svg';\n\nconst NumberOnScreen = props => {\n\n\tconst { info, setCurrentAnswer } = props;\n\tconst [color, setColor ] = React.useState(\"orange\");\n\tconst exercise = props.exercise.exercise;\n\n\tuseEffect(() => { return () => speechRecogniser.stop() }, [])\n\n\tconst speechRecogniser = useSpeechRecognition({\n\t\tonResult: (result) => {\n\t\t\tif (!result.includes(exercise.randomNumber)) return;\n\t\t\tsetCurrentAnswer({ableToContinue: true, answer: result, correct: true});\n\t\t\tsetColor(\"green\");\n\t\t}\n\t});\n\n\tconst btnMicrofonoClicked = (e) => {\n\t\tsetCurrentAnswer({ableToContinue: true, answer: 1, correct: false});\n\t\tif (speechRecogniser.listening) {\n\t\t\tspeechRecogniser.stop();\n\t\t\tsetColor(\"orange\");\n\t\t}\n\t\telse {\n\t\t\tspeechRecogniser.listen({interimResults: true, lang: \"es\"});\n\t\t\tsetColor(\"blue\");\n\t\t};\n\t}\n\n\treturn (\n\t\t<motion.div\n\t\t\tclassName='number-on-screen-container test-exercise-container'\n\t\t\texit={{ transform: 'translateX(-100vw)' }}\n\t\t\tanimate={{ transform: 'translateX(0vw)' }}\n\t\t\tinitial={{ transform: 'translateX(100vw)' }}\n\t\t\ttransition={{ easing: 'linear' }}\n\t\t>\n\t\t\t<div className='number'>{exercise.randomNumber}</div>\n\t\t\t<p className='instruction'>{info.instructions[0]}</p>\n\t\t\t<div\n\t\t\t\tclassName='icon'\n\t\t\t\tonClick={btnMicrofonoClicked}\n\t\t\t\tstyle={{backgroundColor: color}} >\n\t\t\t\t<img src={microphone} alt='Icono LectO Screening' />\n\t\t\t</div>\n\t\t</motion.div>\n\t);\n};\n\nexport default NumberOnScreen;\n","/Users/Ulises/Code/LectO/lecto-screening/src/functions/exercises.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":8,"column":21,"nodeType":"97","messageId":"98","endLine":8,"endColumn":449},{"ruleId":"99","severity":1,"message":"100","line":22,"column":5,"nodeType":"101","endLine":22,"endColumn":14,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":29,"column":5,"nodeType":"101","endLine":29,"endColumn":19,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":17,"column":5,"nodeType":"101","endLine":17,"endColumn":7,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":13,"column":60,"nodeType":"101","endLine":13,"endColumn":62,"suggestions":"108"},"no-native-reassign",["109"],"no-negated-in-lhs",["110"],"no-control-regex","Unexpected control character(s) in regular expression: \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e, \\x01, \\x08, \\x0b, \\x0c, \\x0e, \\x1f, \\x01, \\x09, \\x0b, \\x0c, \\x0e.","Literal","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'exercise' and 'setCurrentAnswer'. Either include them or remove the dependency array.","ArrayExpression",["111"],"React Hook useEffect has missing dependencies: 'exercise.word', 'isCorrect', and 'setCurrentAnswer'. Either include them or remove the dependency array.",["112"],"React Hook React.useEffect has a missing dependency: 'voices'. Either include it or remove the dependency array.",["113"],"React Hook useEffect has a missing dependency: 'speechRecogniser'. Either include it or remove the dependency array.",["114"],"no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"Update the dependencies array to be: [exercise, numbers, setCurrentAnswer]",{"range":"123","text":"124"},"Update the dependencies array to be: [exercise.word, isCorrect, modifiedWord, setCurrentAnswer]",{"range":"125","text":"126"},"Update the dependencies array to be: [voices]",{"range":"127","text":"128"},"Update the dependencies array to be: [speechRecogniser]",{"range":"129","text":"130"},[765,774],"[exercise, numbers, setCurrentAnswer]",[840,854],"[exercise.word, isCorrect, modifiedWord, setCurrentAnswer]",[548,550],"[voices]",[430,432],"[speechRecogniser]"]